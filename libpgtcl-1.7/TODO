

$Id: TODO,v 1.9 2004/11/22 21:36:08 karl Exp $

Document var substitution to pg_sendquery

Document pg_sendquery_prepared

Set up error code when returning errors from postgres stuff.
Return postgres status like {POSTGRES PGRES_EMPTY_QUERY} or whatever.

Go through all possible C library calls to investigate a Postgres
result and make sure they're supported.

Make a cursor-like thing that sits on top of postgres results.  It's
"reusable", because it knows to close out the previous result when it's
being handed a new result.

Fix up new asynchronous operation stuff to use applicable Tcl internals.

Make a new command that uses the async interface but waits behind your
back through the tcl event loop, something like

    pg_query $conn query resultVar {resultCode}

It iterates the resultCode for each result found, automatically clearing
the result at the end of each iteration.

X add -list and -llist options to return list in pg_result

- add introspection commands? e.g. to return the connection handles, or result handles

Possibly implement a notice processor that will allow us to catch reporting
of notice and warning messages generated by libpq.  These are normally
just dumped to stdout.

Add pg_trace and pg_untrace or equivalent to trace client/server
communication to a debugging file stream.

DONE Make configure script use or have an option to use "pg_config --includedir"
to find the postgres includes and "pg_config --libdir" to find the postgres
libraries.

DONE Support for asynchronous operation.

DONE Stubify the build.

DONE Make the build TEA-compliant, including

DONE Document pg_execute.

DONE Document pg_on_connection_loss.

DONE Document new asynchronous operation stuff.

DONE Add support for PQsendQueryParams (parameter substitution to asynchronous
queries.)

DONE Add support for PQsendQueryPrepared (parameter substitution to prepared
statements as asynchronous queries.)

